/* eslint-disable no-unused-vars */
// @flow
import * as React from 'react';
import type { Node, ElementType, ComponentType } from 'react';
import type { Dispatch, Reducer, Epic } from 'redux';
import type { FieldProps } from 'redux-form';

export type Action = { +type: string, paylod: {} }
export type GetState = () => {};
export type PromiseAction = Promise<Action>;
export type ThunkAction = (dispatch: Dispatch, getState: GetState) => *;

export type Props = {
  name: string,
  component: ComponentType<*> | ElementType,
  props?: {},
  store?: {},
  history: {},
  stripes?: {},
  translate?: (value: {}) => ?*,
  forwardRef?: boolean,
  root: {
    addReducer: (key: string, reducer: Reducer<*>) => ?*,
    addEpic: (key: string, epic: Epic<*>) => ?*,
  },
  filterPaneIsVisible: boolean,
  showSettings: boolean,
  children?: React.Node,
}
